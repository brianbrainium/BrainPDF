# GitHub Actions — Convert markdown specs in `issues/` to real Issues
# Robust version: works even on first commit, shallow clones, or re‑runs
# Save as .github/workflows/issue-from-file.yml

name: Issue from file

on:
  push:
    branches: [main]
    paths:
      - 'issues/**.md'   # only fire when these files change
  workflow_dispatch:      # allow manual runs from the UI

jobs:
  create_issue:
    runs-on: ubuntu-latest

    # The default GITHUB_TOKEN now uses fine‑grained permissions
    permissions:
      contents: read      # checkout repo
      issues: write       # create / edit Issues

    steps:
      # 1 Checkout the entire history (depth: 0) so diffing always works
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2 Find which markdown files under `issues/` were added or modified
      - name: Detect changed markdown files
        id: changed
        uses: tj-actions/changed-files@v44
        with:
          files: |
            issues/**.md

      # 3 Create Issue(s) only when we actually have files to process
      - name: Create Issue(s)
        if: steps.changed.outputs.any_changed == 'true'
        id: create_issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: ${{ github.event.head_commit.message }}
          # Newline‑separated list of added + modified files
          content-filepath: ${{ steps.changed.outputs.added_modified_files }}
          labels: enhancement, auto-generated

      # 4 OPTIONAL — Add created Issue(s) to a Project board
      #    Remove this step if you don't use GitHub Projects.
      - name: Add Issue(s) to project board
        if: steps.create_issue.outputs.issue-number != ''
        uses: peter-evans/create-or-update-project-card@v2
        with:
          project-url: https://github.com/orgs/YOUR_ORG/projects/1   # ← replace
          content-id: ${{ steps.create_issue.outputs.issue-number }}
          content-type: Issue
          status: Backlog

      # 5 Else branch: emit a friendly note when no files matched (keeps the run green)
      - name: No matching markdown files
        if: steps.changed.outputs.any_changed == 'false'
        run: echo "No markdown files under 'issues/' were added or modified in this commit — skipping Issue creation."
