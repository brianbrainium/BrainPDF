# .github/workflows/issue-from-file.yml
# Robust & syntax‑clean version (no leading backslashes, correct indentation)

name: Issue from file

on:
  push:
    branches:
      - main
    paths:
      - 'issues/*.md'      # top‑level markdown specs
      - 'issues/**/*.md'   # deeper sub‑folders if any
  workflow_dispatch:

jobs:
  create_issue:
    runs-on: ubuntu-latest

    permissions:
      contents: read   # checkout code
      issues: write    # create / edit Issues

    steps:
      # 1. Checkout full history so diff detection never errors out
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # 2. Detect which markdown files under `issues/` changed in this push
      - name: Detect changed markdown files
        id: changed
        uses: tj-actions/changed-files@v44
        with:
          files: |
            issues/*.md
            issues/**/*.md

      # 3. Exit early if nothing matched (keeps run green)
      - name: Abort if no markdown files changed
        if: steps.changed.outputs.any_changed != 'true'
        run: echo '🟡 No .md files under "issues/" were added or modified — skipping Issue creation.'

      # 4. Create Issue(s) from every added / modified markdown file
      - name: Create Issue(s)
        if: steps.changed.outputs.any_changed == 'true'
        id: create_issue
        uses: peter-evans/create-issue-from-file@v5
        with:
          title: ${{ github.event.head_commit.message }}
          # forcing explicit list so action never sees an empty string
          content-filepath: | 
            ${{ steps.changed.outputs.added_files }}
            ${{ steps.changed.outputs.modified_files }}
          labels: enhancement, auto-generated

      # 5. OPTIONAL — Add created Issue(s) to a Project board (uncomment & edit URL)
      #- name: Add Issue(s) to project board
      #  if: steps.create_issue.outputs.issue-number != ''
      #  uses: peter-evans/create-or-update-project-card@v2
      #  with:
      #    project-url: https://github.com/orgs/YOUR_ORG/projects/1  # ← update
      #    content-id: ${{ steps.create_issue.outputs.issue-number }}
      #    content-type: Issue
      #    status: Backlog

      # 6. Debug — list processed files (visible in log)
      - name: Debug – list processed files
        if: steps.changed.outputs.any_changed == 'true'
        run: |
          echo '🟢 Markdown files sent to create-issue-from-file:'
          printf '%s\n' "${{ steps.changed.outputs.added_modified_files }}"
